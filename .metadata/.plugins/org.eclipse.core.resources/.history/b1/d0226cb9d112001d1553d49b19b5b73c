package testscript;

import static io.restassured.RestAssured.given;

import java.util.Random;

import io.restassured.http.ContentType;
import io.restassured.response.Response;
import reusable.Reusable;
import static org.hamcrest.CoreMatchers.equalTo;


public class APIPostRest {

	public static long theRandomNum = (long) (Math.random()*Math.pow(10,10));
	
	public static String testEmail = null;
	public static long mobilenumber = 0;
	
	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub

//		PostcallapiUsers();	
		PostcallapiUsersPassEmailparameter();
		
	}
		
public static void PostcallapiUsers(){
		
		Response res = given()
							.contentType(ContentType.JSON) //the body is XML 
							.accept(ContentType.JSON) //response need to be XML
							.body("{\r\n"
									+ "    \"name\": \"morpheus\",\r\n"
									+ "    \"job\": \"leader\"\r\n"
									+ "}")
							.when()
							.post(Reusable.readpropertyfile("PostRESTcall"));
		
		System.out.println(res.statusCode());		
		System.out.println(res.body().asString());
		
	}


	public static void PostcallapiUsersPassEmailparameter(){
	
	
	Response res = given()
						.contentType(ContentType.JSON) //the body is XML 
						.accept(ContentType.JSON) //response need to be XML
						.body("{\r\n"
								+ "    \"name\": \"morpheus\",\r\n"
								+ "    \"email\": \""+getSaltString()+"\",\r\n"
								+ "    \"Mobile\": \""+theRandomNum+"\",\r\n"
								+ "    \"job\": \"leader\"\r\n"
								+ "}")
						.when()
						.post(Reusable.readpropertyfile("PostRESTcall"));
	
	System.out.println(res.statusCode());		
	System.out.println(res.body().asString());
	
	}
	
	public static String getSaltString() {
        String SALTCHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder salt = new StringBuilder();
        Random rnd = new Random();
        while (salt.length() < 10) { // length of the random string.
            int index = (int) (rnd.nextFloat() * SALTCHARS.length());
            salt.append(SALTCHARS.charAt(index));
        }
        String saltStr = salt.toString()+"@gmail.com";
        return saltStr;

    }
	
	public static void ComparePostmethodresults() {
		
		testEmail = getSaltString();
		mobilenumber = theRandomNum;
		
		given()
				.contentType(ContentType.JSON)
				.accept(ContentType.ANY)
				.body("{\r\n"
						+ "    \"name\": \"morpheus\",\r\n"
						+ "    \"email\": \""+testEmail+"\",\r\n"
						+ "    \"Mobile\": \""+mobilenumber+"\",\r\n"
						+ "    \"job\": \"leader\"\r\n"
						+ "}")
				.when()
				.post(Reusable.readpropertyfile("PostRESTcall"))
				.then().assertThat()
				.body("email", equalTo(testEmail))
				.body("Mobile", equalTo(mobilenumber));
				
	}

}
